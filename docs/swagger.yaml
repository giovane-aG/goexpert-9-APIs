basePath: /
definitions:
  dtos.AcessToken:
    properties:
      token:
        type: string
    type: object
  dtos.CreateUserDto:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  dtos.LoginDto:
    properties:
      email:
        example: josvane@email.com
        type: string
      password:
        example: "1234"
        type: string
    type: object
  errors.Error:
    properties:
      message:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: giovaneaalmeida27@gmail.com
    name: Giovane Aguiar
  description: Production API authentication.
  termsOfService: http://swagger.io/terms/
  title: Go Expert API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login user
      parameters:
      - description: user request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.LoginDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.AcessToken'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
      summary: Login user
      tags:
      - auth
  /user:
    post:
      consumes:
      - application/json
      description: Create new user
      parameters:
      - description: user request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.CreateUserDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - ApiKeyAuth: []
      summary: Create new user
      tags:
      - users
  /user/findByEmail/{email}:
    get:
      consumes:
      - application/json
      description: Find user by email
      parameters:
      - description: the email of the user
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      security:
      - ApiKeyAuth: []
      summary: Find user by email
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
